# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'viewCualitativas.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Principal(object):
    def setupUi(self, Principal):
        Principal.setObjectName("Principal")
        Principal.setEnabled(True)
        Principal.resize(765, 605)
        Principal.setStyleSheet("background-color: rgba(18,18,18,1);")
        self.centralwidget = QtWidgets.QWidget(Principal)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setEnabled(True)
        font = QtGui.QFont()
        font.setKerning(False)
        self.frame.setFont(font)
        self.frame.setStyleSheet("background-color: rgba(18,18,18,1);\n"
"")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.tableCualitativas = QtWidgets.QTableWidget(self.frame)
        self.tableCualitativas.setGeometry(QtCore.QRect(10, 10, 125, 561))
        self.tableCualitativas.setStyleSheet("background-color: rgb(198, 198, 198);\n"
"color: rgb(50, 50, 50);")
        self.tableCualitativas.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableCualitativas.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableCualitativas.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.tableCualitativas.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableCualitativas.setRowCount(0)
        self.tableCualitativas.setObjectName("tableCualitativas")
        self.tableCualitativas.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignVCenter)
        self.tableCualitativas.setHorizontalHeaderItem(0, item)
        self.tableCualitativas.horizontalHeader().setCascadingSectionResizes(False)
        self.tableCualitativas.horizontalHeader().setDefaultSectionSize(100)
        self.tableCualitativas.horizontalHeader().setHighlightSections(False)
        self.tableCualitativas.horizontalHeader().setMinimumSectionSize(10)
        self.tableCualitativas.horizontalHeader().setSortIndicatorShown(False)
        self.tableCualitativas.horizontalHeader().setStretchLastSection(True)
        self.tableCualitativas.verticalHeader().setVisible(True)
        self.tableCualitativas.verticalHeader().setCascadingSectionResizes(True)
        self.tableCualitativas.verticalHeader().setDefaultSectionSize(25)
        self.tableCualitativas.verticalHeader().setHighlightSections(True)
        self.tableCualitativas.verticalHeader().setMinimumSectionSize(10)
        self.tableCualitativas.verticalHeader().setSortIndicatorShown(True)
        self.tableCualitativas.verticalHeader().setStretchLastSection(False)
        self.MplWidget = MplWidget(self.frame)
        self.MplWidget.setGeometry(QtCore.QRect(140, 270, 461, 301))
        self.MplWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.MplWidget.setObjectName("MplWidget")
        self.tableFrecuencia = QtWidgets.QTableWidget(self.frame)
        self.tableFrecuencia.setGeometry(QtCore.QRect(140, 10, 461, 241))
        self.tableFrecuencia.setStyleSheet("background-color: rgb(198, 198, 198);\n"
"color: rgb(50, 50, 50);")
        self.tableFrecuencia.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableFrecuencia.setObjectName("tableFrecuencia")
        self.tableFrecuencia.setColumnCount(3)
        self.tableFrecuencia.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableFrecuencia.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFrecuencia.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFrecuencia.setHorizontalHeaderItem(2, item)
        self.tableFrecuencia.horizontalHeader().setDefaultSectionSize(130)
        self.tableFrecuencia.horizontalHeader().setSortIndicatorShown(False)
        self.tableFrecuencia.horizontalHeader().setStretchLastSection(True)
        self.tableFrecuencia.verticalHeader().setVisible(False)
        self.tableFrecuencia.verticalHeader().setHighlightSections(True)
        self.Volver = QtWidgets.QPushButton(self.frame)
        self.Volver.setGeometry(QtCore.QRect(620, 10, 121, 21))
        self.Volver.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Volver.setStyleSheet("background-color: rgba(30, 215, 96,0.65);\n"
"color: white;\n"
"font:bold;\n"
"\n"
"")
        self.Volver.setCheckable(False)
        self.Volver.setChecked(False)
        self.Volver.setDefault(True)
        self.Volver.setFlat(False)
        self.Volver.setObjectName("Volver")
        self.horizontalLayout.addWidget(self.frame)
        Principal.setCentralWidget(self.centralwidget)

        self.retranslateUi(Principal)
        QtCore.QMetaObject.connectSlotsByName(Principal)

    def retranslateUi(self, Principal):
        _translate = QtCore.QCoreApplication.translate
        Principal.setWindowTitle(_translate("Principal", "Probabilidad_Estaditica"))
        item = self.tableCualitativas.horizontalHeaderItem(0)
        item.setText(_translate("Principal", "Cualitativos"))
        item = self.tableFrecuencia.horizontalHeaderItem(0)
        item.setText(_translate("Principal", "Valor"))
        item = self.tableFrecuencia.horizontalHeaderItem(1)
        item.setText(_translate("Principal", "Frecuencia Absoluta"))
        item = self.tableFrecuencia.horizontalHeaderItem(2)
        item.setText(_translate("Principal", "Frecuencia Relativa"))
        self.Volver.setText(_translate("Principal", "Volver"))
from Model.mplwidget import MplWidget


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Principal = QtWidgets.QMainWindow()
    ui = Ui_Principal()
    ui.setupUi(Principal)
    Principal.show()
    sys.exit(app.exec_())
